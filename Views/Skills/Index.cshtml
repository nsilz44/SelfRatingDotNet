@model List<Rating.Data.Category>
@{
    ViewData["Title"] = "Skill Progress Tracker";
}

<h3>Skill Progress Tracker</h3>

<div class="mb-3 d-flex gap-2">
    @using (Html.BeginForm("AddCategory", "Skills", FormMethod.Post, new { @class = "d-flex gap-2" }))
    {
        @Html.TextBox("name", "", new { placeholder = "New Category Name", @class = "form-control" })
        <button type="submit" class="btn btn-primary btn-sm">Add Category</button>
    }
</div>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@foreach (var category in Model)
{
    <div class="card mb-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <a>Category:<b>@category.Name</b> Average:<b>@(category.Skills.Select(x => x.Rating).DefaultIfEmpty(0.0).Average())</b></a>
            <span>
                <a href="@Url.Action("EditCategory", "Skills", new { id = category.Id })" class="btn btn-outline-secondary btn-sm me-1">Edit</a>
                @using (Html.BeginForm("DeleteCategory", "Skills", new { id = category.Id }, FormMethod.Post, true, new { @class = "d-inline" }))
                {
                    <button type="submit" class="btn btn-outline-danger btn-sm" onclick="return confirm('Are you sure you want to delete this category?')">Delete</button>
                }
            </span>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("AddSkill", "Skills", FormMethod.Post))
            {
                <input type="hidden" name="categoryId" value="@category.Id" />
                <div class="mb-2 d-flex flex-column flex-md-row align-items-md-center gap-2">
                    <input name="name" placeholder="New Skill Name" class="form-control flex-fill" />
                    <input type="number" name="rating" step="0.1" min="0" max="10" value="0" class="form-control" style="width:100px;max-width:120px;" />
                    <button type="submit" class="btn btn-success btn-sm">Add Skill</button>
                </div>
            }
            <table class="table table-sm table-responsive-md">
                <thead>
                    <tr><th>Skill</th><th>Rating</th><th>Notes</th><th>Update</th><th>Actions</th></tr>
                </thead>
                <tbody>
                    @foreach (var skill in category.Skills)
                    {
                        <tr>
                            <td>@skill.Name</td>
                            <td>
                                @using (Html.BeginForm("UpdateSkillRating", "Skills", new { id = skill.Id }, FormMethod.Post, true, new { @class = "d-flex align-items-center gap-2" }))
                                {
                                    <input type="range" name="rating" min="0" max="@(skill.CustomMaxRating ?? 10)" step="0.1" value="@skill.Rating" class="form-range" style="width:150px;" 
                                           oninput="this.nextElementSibling.textContent = this.value + ' / ' + @(skill.CustomMaxRating ?? 10)" />
                                    <span>@skill.Rating.ToString("0.0") / @(skill.CustomMaxRating ?? 10)</span>
                                    <button type="submit" class="btn btn-secondary btn-sm">Save</button>
                                }
                            </td>
                            <td>@skill.Notes</td>
                            <td>
                                <div class="btn-group">
                                    <a href="@Url.Action("EditSkill", "Skills", new { id = skill.Id })" class="btn btn-outline-secondary btn-sm">Edit</a>
                                    @using (Html.BeginForm("DeleteSkill", "Skills", new { id = skill.Id }, FormMethod.Post, true, new { @class = "d-inline" }))
                                    {
                                        <button type="submit" class="btn btn-outline-danger btn-sm" onclick="return confirm('Are you sure you want to delete this skill?')">Delete</button>
                                    }
                                    <a href="@Url.Action("SkillHistory", "Skills", new { id = skill.Id })" class="btn btn-outline-info btn-sm">History</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
<a href="@Url.Action("AllSkillHistory", "Skills",new { id = 1 })" class="btn btn-info mb-3">View Overall Skill History</a>
